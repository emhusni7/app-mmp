// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique(map: "username") @db.VarChar(40)
  createdat DateTime @default(now()) @db.Timestamp(0)
  password String @db.VarChar(100)
  menu Json? @db.Json
  categories CategoriesOnUsers[]
  @@map("users")
}

model Category {
  id Int @id @default(autoincrement())
  category_name String @db.VarChar(20)
  createdat DateTime @default(now()) @db.Timestamp(0)
  company String? @db.VarChar(20)
  users CategoriesOnUsers[]
  items Item[]
  @@map("category")	
  @@unique([category_name, company])
}


model CategoriesOnUsers {
  user User @relation(fields: [userid], references: [id])
  userid Int
  category Category @relation(fields: [categoryid], references: [id])
  categoryid Int 
  @@id([userid, categoryid])
  @@map("user_category_rel")
}

model Item{
  id Int @id @default(autoincrement())
  createdat DateTime @default(now()) @db.Timestamp(0)
  item_name String @db.VarChar(30)
  description String @db.Text
  categories Category @relation(fields: [category_id], references: [id])
  category_id Int
  trans_ids Transaction[]
  @@unique([item_name, category_id])
}

model Transaction{
  id Int @id @default(autoincrement())
  createdat DateTime @default(now()) @db.Timestamp(0)
  username String @db.VarChar(50)
  rfid String @db.VarChar(20)
  userid String @db.VarChar(10)
  items Item @relation(fields: [item_id], references: [id])
  description String? @db.Text
  item_id Int
  qty Float 
  state String @db.VarChar(10)
  tgl_pinjam DateTime?
  tgl_kembali DateTime?
  stUniq Int? 
  @@unique([userid, username, item_id, stUniq])
}
